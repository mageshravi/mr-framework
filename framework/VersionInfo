VERSION 1.0
10-Dec-2012

VERSION 1.1
05-Feb-2013
- added application/Rest.class.php
- added includes/httpCodes.ini
- modified includes/init.php
- modified public/index.php
- template object to be part of controller, and not part of registry
  (use $this->template->name = value 
    instead of $this->registry->template->name = value)

VERSION 1.2
16-Apr-2013
- All service classes will have 'writeConn' attribute instead of 'db' attribute
- db.class to have methods getReadConnection() and getWriteConnection()

VERSION 1.3
- All classes to have namespaces

VERSION 1.3.1
- Sql2ModelController available by default

VERSION 1.3.2
- 'application' folder renamed to 'framework'
- Use 'setLayout()' method for setting template layout

VERSION 1.3.3
- function to autoload classes refined

VERSION 1.3.4
- function to autoload classes refined
- Model and Service classes to have namespace like "com\appname\model"

VERSION 1.4
- all controllers to implement new abstract method init()
- all publicly callable actions to have the suffix 'Action'
- Template::setLayout() method allows chaining
- Request::factory() allows internal requests (HMVC implementation. Work in progress)

VERSION 1.4.1
- all controller classes to have namespace like "com\appname\controller"
- all controller classes to have suffix ".class.php"

VERSION 1.4.1.1
- Rest::processRequest() returns filtered input data. 
- Also accepts optional filter definitions. 
- Strict mode to check if the request parameters are identical to the given filter definition.
- IndexController renamed to HomeController

VERSION 1.4.1.2
- Rest::processRequest() deprecated. Instead, use Request object within controller.
- Web root to be renamed "public_html"

VERSION 1.4.1.3
- exceptions.inc.php removed
- MRException to have constants that define exception codes

VERSION 1.4.2
- SQL2ModelController generates model classes, validator functions and exception classes
- SEO friendly URL parameters can be accessed from the view file using $_seoParams array

VERSION 1.4.2.1
- Removed the destructor from Log class that causes missing log statements in some cases

VERSION 1.4.3
- Framework logs the peak memory usage and execution time for each request
- Log object removed from Router, BaseController and BaseService
- log_debug() function added to log from anywhere without instantiating a log object